name: API

on:
  # Trigger: cuando se actualicen las branchs o tags
  push:
    branches:
      - "main"
      - "release-*"
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Descarga el repositorio
      - uses: actions/checkout@v2

      # Step 2: Identifica el nombre de la tag / branch de git
      - name: "Prepare source name: Tag or branch name"
        id: prepare_source
        run: |
          SOURCE_NAME="${GITHUB_REF#refs/*/}"
          [ $SOURCE_NAME == "main" ] && SOURCE_NAME="latest"
          echo ::set-output name=SOURCE_NAME::${SOURCE_NAME}
      
      # Steps 3 y 4: Requisitos QEMU y Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 5: Autenticaci贸n en el registry
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASS }}
      
      # Step 6: Configuraci贸n de las variables de entorno
      - name: Set up environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      # Step 7: Construcci贸n y publicaci贸n de la imagen
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            gastonnicora/remates-socket:${{ env.SOURCE_NAME }}
        env:
          SOURCE_NAME: ${{ steps.prepare_source.outputs.SOURCE_NAME }}

      # Step 8: Muestra el digest de la imagen
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
